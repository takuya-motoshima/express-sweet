{{!< default}}
{{#contentFor 'title'}}Routing{{/contentFor}}
{{#contentFor 'sidenav'}}
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#overview" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Overview</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#basic-routing" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Basic Routing</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#nested-routing" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Nested Routing</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#default-routing" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Default Routing</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#routing-methods" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Routing Methods</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
{{/contentFor}}
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="overview" data-kt-scroll-offset="100">
    <a href="#overview"></a>Routing
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">
    Routing refers to determining how an application responds to a client request to a particular endpoint, which is a URI (or path) and a specific HTTP request method (GET, POST, and so on).<br>
    Each route can have one or more handler functions, which are executed when the route is matched.<br>
    Route definition takes the following structure.
  </div>
  <!--end::Block-->
  <!--begin::Block-->
  <div class="py-5">
    <ul>
      <li class="py-2">app is an instance of express.</li>
      <li class="py-2">METHOD is an <a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods" target="_blank">HTTP request method</a>, in lowercase.</li>
      <li class="py-2">PATH is a path on the server.</li>
      <li class="py-2">HANDLER is the function executed when the route is matched.</li>
    </ul>
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="py-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#routing-esm-tab" role="tab">ESM</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#routing-cjs-tag" role="tab">CJS</a></li>
      </ul>
      <div class="tab-content">
        <div class="tab-pane fade show active" id="routing-esm-tab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript"><code class="language-javascript">import express from &#039;express&#039;;

const app = express();
app.METHOD(PATH, HANDLER)</code></pre>
          </div>
        </div>
        <div class="tab-pane fade" id="routing-cjs-tag" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript"><code class="language-javascript">const express = require(&#039;express&#039;);

const app = express();
app.METHOD(PATH, HANDLER)</code></pre>
          </div>
        </div>
      </div>
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="basic-routing" data-kt-scroll-offset="100">
    <a href="#basic-routing"></a>Basic Routing
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">
    All routes are defined in your route files, which are located in the <code>routes</code> directory.<br>
    These files are automatically mapped by <code>Express Sweet</code> to the route files specified in the URI and the route handlers defined in the route files.<br>
    The following examples illustrate defining simple routes.<br>
    <code>routes/user.js</code> responds to <code>GET /user</code> requests.
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="py-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#basic-routing-esm-tab" role="tab">ESM</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#basic-routing-cjs-tag" role="tab">CJS</a></li>
      </ul>
      <div class="tab-content">
        <div class="tab-pane fade show active" id="basic-routing-esm-tab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript"><code class="language-javascript">import {Router} from &#039;express&#039;;
const router = Router();

router.get(&#039;/&#039;, (req, res) =&gt; {
  res.send(&#039;Hello World&#039;);
});
export default router;</code></pre>
          </div>
        </div>
        <div class="tab-pane fade" id="basic-routing-cjs-tag" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript"><code class="language-javascript">const express = require(&#039;express&#039;);
const router = express.Router();

router.get(&#039;/&#039;, (req, res) =&gt; {
  res.send(&#039;Hello World&#039;);
});
module.exports = router;</code></pre>
          </div>
        </div>
      </div>
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="nested-routing" data-kt-scroll-offset="100">
    <a href="#nested-routing"></a>Nested Routing
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">
    The router supports nested files.<br>
    If you create a nested folder structure files will be automatically routed in the same way still.<br>
    <code>routes/api/users.js</code> responds to <code>GET /api/users</code> requests.
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="py-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#nested-routing-esm-tab" role="tab">ESM</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#nested-routing-cjs-tag" role="tab">CJS</a></li>
      </ul>
      <div class="tab-content">
        <div class="tab-pane fade show active" id="nested-routing-esm-tab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript"><code class="language-javascript">import {Router} from &#039;express&#039;;
const router = Router();

router.get(&#039;/&#039;, (req, res) =&gt; {
  res.send(&#039;Hello World&#039;);
});
export default router;</code></pre>
                              </div>
                            </div>
                            <div class="tab-pane fade" id="nested-routing-cjs-tag" role="tabpanel">
                              <div class="highlight-code">
                                <pre class="language-javascript"><code class="language-javascript">const express = require(&#039;express&#039;);
const router = express.Router();

router.get(&#039;/&#039;, (req, res) =&gt; {
  res.send(&#039;Hello World&#039;);
});
module.exports = router;</code></pre>
          </div>
        </div>
      </div>
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="default-routing" data-kt-scroll-offset="100">
    <a href="#default-routing"></a>Default Routing
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">
    Express Sweet can be told to load a default router when a URI is not present, as will be the case when only your site root URL (<code>/</code>) is requested.<br>
    To specify a default router, open your <code>config/config.js</code> file and set this variable:
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="py-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <div class="highlight-code">
        <pre class="language-javascript"><code class="language-javascript">default_router: &#039;/blog&#039;</code></pre>
      </div>
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
  <!--begin::Block-->
  <div class="py-5">
    Where blog is the name of the router module you want used.<br>
    Next, create the <code>routes/blog.js</code> module.
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="py-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#default-routing-esm-tab" role="tab">ESM</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#default-routing-cjs-tag" role="tab">CJS</a></li>
      </ul>
      <div class="tab-content">
        <div class="tab-pane fade show active" id="default-routing-esm-tab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript"><code class="language-javascript">import {Router} from &#039;express&#039;;
const router = Router();

router.get(&#039;/&#039;, (req, res) =&gt; {
  res.send(&#039;Hello World&#039;);
});
export default router;</code></pre>
          </div>
        </div>
        <div class="tab-pane fade" id="default-routing-cjs-tag" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript"><code class="language-javascript">const express = require(&#039;express&#039;);
const router = express.Router();

router.get(&#039;/&#039;, (req, res) =&gt; {
  res.send(&#039;Hello World&#039;);
});
module.exports = router;</code></pre>
          </div>
        </div>
      </div>
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
  Now when you request the root URL (<code>/</code>), you will see "Hello World".
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="routing-methods" data-kt-scroll-offset="100">
    <a href="#routing-methods"></a>Routing Methods
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">
    Express supports the following routing methods corresponding to the HTTP methods of the same names.<br>
    For more details about routing, see the <a href="https://expressjs.com/en/guide/routing.html#express-router" target="_blank">Exprees’s Routing Guide</a>.
  </div>
  <!--end::Block-->
  <!--begin::Row-->
  <div class="row">
    <!--begin::Col-->
    <div class="col-6 col-md-4 pe-md-10 mb-10 mb-md-0">
      <ul>
        <li class="py-2"><code>checkout</code></li>
        <li class="py-2"><code>copy</code></li>
        <li class="py-2"><code>delete</code></li>
        <li class="py-2"><code>get</code></li>
        <li class="py-2"><code>head</code></li>
        <li class="py-2"><code>lock</code></li>
        <li class="py-2"><code>merge</code></li>
        <li class="py-2"><code>mkactivity</code></li>
      </ul>
    </div>
    <!--end::Col-->
    <!--begin::Col-->
    <div class="col-6 col-md-4 pe-md-10 mb-10 mb-md-0">
      <ul>
        <li class="py-2"><code>mkcol</code></li>
        <li class="py-2"><code>move</code></li>
        <li class="py-2"><code>m-search</code></li>
        <li class="py-2"><code>notify</code></li>
        <li class="py-2"><code>options</code></li>
        <li class="py-2"><code>patch</code></li>
        <li class="py-2"><code>post</code></li>
      </ul>
    </div>
    <!--end::Col-->
    <!--begin::Col-->
    <div class="col-6 col-md-4 ps-md-10">
      <ul>
        <li class="py-2"><code>purge</code></li>
        <li class="py-2"><code>put</code></li>
        <li class="py-2"><code>report</code></li>
        <li class="py-2"><code>search</code></li>
        <li class="py-2"><code>subscribe</code></li>
        <li class="py-2"><code>trace</code></li>
        <li class="py-2"><code>unlock</code></li>
        <li class="py-2"><code>unsubscribe</code></li>
      </ul>
    </div>
    <!--end::Col-->
  </div>
  <!--end::Row-->
</div>
<!--end::Section-->