{{!< default}}
{{#contentFor 'title'}}SES Class{{/contentFor}}
{{#contentFor 'sidenav'}}
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#overview" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Overview</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#instance-methods" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Instance Methods</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
{{/contentFor}}
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="overview" data-kt-scroll-offset="100">
    <a href="#overview"></a>SES Class
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">
    Send an email.
  </div>
  <!--end::Block-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="instance-methods" data-kt-scroll-offset="100">
    <a href="#instance-methods"></a>Instance Methods
  </h1>
  <!--end::Heading-->
  <!--begin::Table wrapper-->
  <div class="table-responsive">
    <!--begin::Table-->
    <table class="table table-row-bordered mb-0 gy-5">
      <!--begin::Head-->
      <thead>
        <tr class="p-6">
          <th class="min-w-250px">Name</th>
          <th>Description</th>
        </tr>
      </thead>
      <!--end::Head-->
      <!--begin::Body-->
      <tbody>
        <tr>
          <td><code>public constructor()</code></td>
          <td>
            Constructs a SES client object.
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Parameters:</h5>
            <!--end::Heading-->
            <!--begin::Parameters-->
            <ul>
              <li class="py-2"><code>options.apiVersion: string</code>
                <!--begin::Block-->
                <div class="pt-3">API version in YYYYY-MM-DD format (or date). Specify &#039;latest&#039; to use the latest possible version. The default is &#039;latest&#039;.</div>
                <!--end::Block-->
              </li>
              <li class="py-2"><code>options.region: string</code>
                <!--begin::Block-->
                <div class="pt-3">The region to send service requests to.</div>
                <!--end::Block-->
              </li>
              <li class="py-2"><code>options.accessKeyId: string</code>
                <!--begin::Block-->
                <div class="pt-3">AWS access key ID.</div>
                <!--end::Block-->
              </li>
              <li class="py-2"><code>options.secretAccessKey: string</code>
                <!--begin::Block-->
                <div class="pt-3">AWS secret access key.</div>
                <!--end::Block-->
              </li>
            </ul>
            <!--end::Parameters-->
            <!--begin::Code-->
            <div class="pt-3">
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <ul class="nav nav-pills" role="tablist">
                  <li class="nav-item">
                    <a class="nav-link active" data-bs-toggle="tab" href="#constructor-esm" role="tab">ESM</a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#constructor-cjs" role="tab">CJS</a>
                  </li>
                </ul>
                <div class="tab-content">
                  <div class="tab-pane fade show active" id="constructor-esm" role="tabpanel">
                    <div class="highlight-code">
                      <pre class="language-javascript"><code class="language-javascript">import * as sweet from &#039;express-sweet&#039;;

// Load environment variables.
sweet.middlewares.Environment.mount();

// AWS SES Client.
const client = new sweet.services.AWSSesClient({
  apiVersion: process.env.SES_API_VERSION,
  region: process.env.SES_REGION,
  accessKeyId: process.env.SES_ACCESS_KEY_ID,
  secretAccessKey: process.env.SES_SECRET_ACCESS_KEY,
});</code></pre>
                    </div>
                  </div>
                  <div class="tab-pane fade" id="constructor-cjs" role="tabpanel">
                    <div class="highlight-code">
                      <pre class="language-javascript"><code class="language-javascript">const sweet = require(&#039;express-sweet&#039;);

// Load environment variables.
sweet.middlewares.Environment.mount();

// AWS SES Client.
const client = new sweet.services.AWSSesClient({
  apiVersion: process.env.SES_API_VERSION,
  region: process.env.SES_REGION,
  accessKeyId: process.env.SES_ACCESS_KEY_ID,
  secretAccessKey: process.env.SES_SECRET_ACCESS_KEY,
});</code></pre>
                    </div>
                  </div>
                </div>
              </div>
              <!--end::Highlight-->
            </div>
            <!--end::Code-->
          </td>
        </tr>
        <tr>
          <td><code>public send()</code></td>
          <td>
            Send email.
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Parameters:</h5>
            <!--end::Heading-->
            <!--begin::Parameters-->
            <ul>
              <li class="py-2"><code>type: &#039;text&#039;|&#039;html&#039;</code>
                <!--begin::Block-->
                <div class="pt-3">E-Mail type (&#039;html&#039;: HTML mail, &#039;text&#039;: text mail). Default is &#039;text&#039;.</div>
                <!--end::Block-->
              </li>
            </ul>
            <!--end::Parameters-->
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Return:</h5>
            <!--end::Heading-->
            <!--begin::Return-->
            <ul class="list-style-none">
              <li class="py-2"><code>Promise&lt;string&gt;</code> Unique ID assigned by Amazon SES for a successfully sent email.</li>
            </ul>
            <!--end::Return-->
            <!--begin::Code-->
            <div class="pt-3">
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <ul class="nav nav-pills" role="tablist">
                  <li class="nav-item">
                    <a class="nav-link active" data-bs-toggle="tab" href="#send-method-esm" role="tab">ESM</a>
                  </li>
                  <li class="nav-item">
                    <a class="nav-link" data-bs-toggle="tab" href="#send-method-cjs" role="tab">CJS</a>
                  </li>
                </ul>
                <div class="tab-content">
                  <div class="tab-pane fade show active" id="send-method-esm" role="tabpanel">
                    <div class="highlight-code">
                      <pre class="language-javascript"><code class="language-javascript">import * as sweet from &#039;express-sweet&#039;;

// Load environment variables.
sweet.middlewares.Environment.mount();

// AWS SES Client.
const client = new sweet.services.AWSSesClient({
  apiVersion: process.env.SES_API_VERSION,
  region: process.env.SES_REGION,
  accessKeyId: process.env.SES_ACCESS_KEY_ID,
  secretAccessKey: process.env.SES_SECRET_ACCESS_KEY,
});

// Send email.
await client
  .from(&#039;user1@example.com&#039;, &#039;Sender Name&#039;)
  .to(&#039;user2@example.com&#039;)
  .subject(&#039;Test email&#039;) 
  .body(&#039;Hi, this is a test email&#039;)
  .send();

// Use variables in the body of the e-mail.
// The body can use the handlebars and handlebars-extd syntax.
await client
  .from(&#039;user1@example.com&#039;, &#039;Sender Name&#039;)
  .to(&#039;user2@example.com&#039;)
  .subject(&#039;Test email&#039;) 
  .body(&#039;Hello {{name}}&#039;, {name: &#039;Mason&#039;})
  .send();</code></pre>
                    </div>
                  </div>
                  <div class="tab-pane fade" id="send-method-cjs" role="tabpanel">
                    <div class="highlight-code">
                      <pre class="language-javascript"><code class="language-javascript">const sweet = require(&#039;express-sweet&#039;);

// Load environment variables.
sweet.middlewares.Environment.mount();

// AWS SES Client.
const client = new sweet.services.AWSSesClient({
  apiVersion: process.env.SES_API_VERSION,
  region: process.env.SES_REGION,
  accessKeyId: process.env.SES_ACCESS_KEY_ID,
  secretAccessKey: process.env.SES_SECRET_ACCESS_KEY,
});

// Send email.
await client
  .from(&#039;user1@example.com&#039;, &#039;Sender Name&#039;)
  .to(&#039;user2@example.com&#039;)
  .subject(&#039;Test email&#039;) 
  .body(&#039;Hi, this is a test email&#039;)
  .send();

// Use variables in the body of the e-mail.
// The body can use the handlebars and handlebars-extd syntax.
await client
  .from(&#039;user1@example.com&#039;, &#039;Sender Name&#039;)
  .to(&#039;user2@example.com&#039;)
  .subject(&#039;Test email&#039;) 
  .body(&#039;Hello {{name}}&#039;, {name: &#039;Mason&#039;})
  .send();</code></pre>
                    </div>
                  </div>
                </div>
              </div>
              <!--end::Highlight-->
            </div>
            <!--end::Code-->
          </td>
        </tr>
        <tr>
          <td><code>public from()</code></td>
          <td>
            Set the sender's email address.
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Parameters:</h5>
            <!--end::Heading-->
            <!--begin::Parameters-->
            <ul>
              <li class="py-2"><code>from: string</code>
                <!--begin::Block-->
                <div class="pt-3">Sender&#039;s email address.</div>
                <!--end::Block-->
              </li>
              <li class="py-2"><code>name?: string</code>
                <!--begin::Block-->
                <div class="pt-3">Sender Name.</div>
                <!--end::Block-->
              </li>
            </ul>
            <!--end::Parameters-->
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Return:</h5>
            <!--end::Heading-->
            <!--begin::Return-->
            <ul class="list-style-none">
              <li class="py-2"><code>AWSSesClient</code></li>
            </ul>
            <!--end::Return-->
          </td>
        </tr>
        <tr>
          <td><code>public to()</code></td>
          <td>
            Set the destination email address.
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Parameters:</h5>
            <!--end::Heading-->
            <!--begin::Parameters-->
            <ul>
              <li class="py-2"><code>to: string|string[]</code>
                <!--begin::Block-->
                <div class="pt-3">Email address to be sent to.</div>
                <!--end::Block-->
              </li>
            </ul>
            <!--end::Parameters-->
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Return:</h5>
            <!--end::Heading-->
            <!--begin::Return-->
            <ul class="list-style-none">
              <li class="py-2"><code>AWSSesClient</code></li>
            </ul>
            <!--end::Return-->
          </td>
        </tr>
        <tr>
          <td><code>public cc()</code></td>
          <td>
            Set CC email address.
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Parameters:</h5>
            <!--end::Heading-->
            <!--begin::Parameters-->
            <ul>
              <li class="py-2"><code>cc: string|string[]</code>
                <!--begin::Block-->
                <div class="pt-3">CC email address.</div>
                <!--end::Block-->
              </li>
            </ul>
            <!--end::Parameters-->
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Return:</h5>
            <!--end::Heading-->
            <!--begin::Return-->
            <ul class="list-style-none">
              <li class="py-2"><code>AWSSesClient</code></li>
            </ul>
            <!--end::Return-->
          </td>
        </tr>
        <tr>
          <td><code>public subject()</code></td>
          <td>
            Set the email subject.
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Parameters:</h5>
            <!--end::Heading-->
            <!--begin::Parameters-->
            <ul>
              <li class="py-2"><code>subject: string</code>
                <!--begin::Block-->
                <div class="pt-3">Email Subject.</div>
                <!--end::Block-->
              </li>
            </ul>
            <!--end::Parameters-->
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Return:</h5>
            <!--end::Heading-->
            <!--begin::Return-->
            <ul class="list-style-none">
              <li class="py-2"><code>AWSSesClient</code></li>
            </ul>
            <!--end::Return-->
          </td>
        </tr>
        <tr>
          <td><code>public body()</code></td>
          <td>
            Set the body of the email.
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Parameters:</h5>
            <!--end::Heading-->
            <!--begin::Parameters-->
            <ul>
              <li class="py-2"><code>body: string</code>
                <!--begin::Block-->
                <div class="pt-3">Email Body. The body can use the <a href="https://handlebarsjs.com/" class="fw-semibold" target="_blank">handlebars</a> and <a href="https://www.npmjs.com/package/handlebars-extd" class="fw-semibold" target="_blank">handlebars-extd</a> syntax.</div>
                <!--end::Block-->
              </li>
              <li class="py-2"><code>vars: {[key: string]: any}</code>
                <!--begin::Block-->
                <div class="pt-3">The value of a variable in the body of the e-mail.</div>
                <!--end::Block-->
              </li>
            </ul>
            <!--end::Parameters-->
            <!--begin::Heading-->
            <h5 class="py-2 mb-0">Return:</h5>
            <!--end::Heading-->
            <!--begin::Return-->
            <ul class="list-style-none">
              <li class="py-2"><code>AWSSesClient</code></li>
            </ul>
            <!--end::Return-->
          </td>
        </tr>
      </tbody>
      <!--end::Body-->
    </table>
    <!--end::Table-->
  </div>
  <!--end::Table wrapper-->
</div>
<!--end::Section-->